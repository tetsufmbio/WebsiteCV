body, html {
  height:100%;
  /*background-color:   #3399FF;*/
}

/*Styling the links*/
a {
    color: #FE4B74;
}

/*Sections styling*/
section {
  width: 100%;
  padding: 0 0%;
  display: table;
  margin: 0;
  max-width: none;
  height: 100vh;
}

#section1{
  background-color: #3f51b5;
  /* For WebKit (Safari, Chrome, etc) */
  background: #3f51b5 -webkit-gradient(linear, left top, left bottom, from(#0B72D9), to(#3f51b5)) no-repeat;
  /* Mozilla,Firefox/Gecko */
  background: #3f51b5 -moz-linear-gradient(top, #0B72D9, #3f51b5) no-repeat;
  /* IE 5.5 - 7 */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#0B72D9, endColorstr=#3f51b5) no-repeat;
  /* IE 8 */
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#0B72D9, endColorstr=#0B72D9)" no-repeat;
}

#section2{
  font-family: 'Finger Paint', cursive;
  font-size: xx-large;
  background-color:#FE4B74;
}

#previewTitle{
  color: #FFFFFF;
  display: table-cell;
  vertical-align: middle;

}

input{display:none}
svg{float:left;width:100px;margin:0 1px}
label{cursor:pointer}

/* For Scaling the SVG inline files to its parent container*/
.scaleSVG {
  position:absolute;
  left:0;
  right:0;
  top:0;
  width:100%;
  /*border: 1px solid black;*/

  height:100%;
}
/* Make elements look like a link (in this case SVG-Elements) by changing the cursor*/
.linkCursor{
  cursor: pointer;

}
.marginRow{
    margin:0px;
    padding-right:0;
    padding-left:0;
    text-align: center;
}

.contentMain{
      border: 1px solid black ;
      padding: 15px ;
      font-family: monospace;
      font-weight: bold;
      background-color:  #2196f3;
      height: auto;
      max-width: 300px;
      position: absolute;
      top: 400px;
      /*Toggle this for later, if you can align to row center?*/
      min-width : 100% ;
}
.contentExtra{
      padding: 15px;
      border-radius: 25px;
      background-color: #0099CC;
      position: absolute;
      top: 100px;
      height: auto;
      width: auto;
      font-family: monospace;
      font-weight: bold;
}
#menue{
  position: absolute;
    bottom: 0;
    right: 0;
    width:100% ;
    height: 50%;
}

.hide{
  display: none;
}

/*A simple loader animation with css*/
.loader {
    /*border-top: 10px solid #eb7a26;*/
    border-top: 10px solid #7FFFD4;
    border-right: 10px solid #6495ED;
    border-bottom: 10px solid #ffffff;
    border-left: 10px solid #F08080;
    border-radius: 60%;
    /*
    border: 16px solid #ffffff;
    border-top: 16px solid #458bd3;

    */
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
    display: inline-block;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/*Styles for content.html*/

#heart2{
  display: inline-block;
  color: "red";
  width: 200px;
  height: 200px;
}

#heart1Image{
  display: inline-block;
  max-width: 100%;
  max-height: 100%;
}

#table1{
  max-width: 10px%;
  table-layout: fixed;
  word-wrap: break-word;
  color: "green";
}

.table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
  background-color:#eb7a26;
}

/*Style for custom timeline based on pen: QNeJgR
https://webdesign.tutsplus.com/tutorials/building-a-vertical-timeline-with-css-and-a-touch-of-javascript--cms-26528

TODO Add the animation part
*/
/*line connection, here we convert one bullet entry to a white filled box which looks like a straight line*/

.chronic ul li {
  list-style-type: none;
  position: relative;
  width: 10px;
  margin: 0 auto;
  background: #fff;
  font-family:sans-serif;
  /*gap between bullet-nobullet*/
  padding-top: 5px;
  /*background-image : url("../svg/total/test/final/things/plant.svg");
  background-size: auto auto;
  background-repeat: no-repeat;
  */
}

.chronic ul {
  width: 100%;
}

/*hide the first node e first-child*/
.chronic ul li:first-child {
  padding-top: 50px;
}

/*point, for that bullet element we remain the attribute but remove the content*/
.chronic ul li::after {
  content: '';
  position: absolute;
  bottom: 0;
  /*center points*/
  transform: translateX(-50%);
  left: 50%;
  /*point dims*/
  width: 30px;
  height: 30px;
  /*make a point/quader*/
  border-radius: 20%;
  background: inherit;
}

/*Acessing the div element which is the text field*/
.chronic ul li div {
  position: relative;
  bottom: 0;
  /*TODO This is very hacky! Find another solution*/
  width: 2000%;
  /*box-shadow: inset 0px 0px 50px 37px #3399CC;*/
/*Here you can define the length of the connection lines*/
  padding: 0px;
  /*Not good but effective*/
	margin-bottom: -20px;
  color: white;
  font-family: sans-serif;
  /*background-color:rgba(235,122,3,0.8);*/
  /*background: #F45B69;*/
}
/*non text field*/
.chronic ul li div::before {
  content: '';
  position: absolute;
  bottom: 7px;
  width: 0;
  height: 0;
  border-style: solid;
}

/*Styling odd and even elements*/
/*
1) Padding from line
2) Mirroring even elements
3) Adding form to text field with pseudo-element
4) Styling boxes
*/
.chronic ul li:nth-child(odd) div {
  left: 45px;
  padding-left: 10px;
}

.chronic ul li:nth-child(odd) div::before {
  left: -15px;
  border-width: 8px 16px 8px 0;
  border-color: transparent #ffa726 transparent transparent;
}

.chronic ul li:nth-child(even) div {
  left: -240px;
}

.chronic ul li:nth-child(even) div::before {
  right: -15px;
  border-width: 8px 0 8px 16px;
  border-color: transparent transparent transparent #ffa726;
}

.chronic ul li div time {
  font-weight: bold !important;
  color: #ffa726 !important;
}

/*Adding newline after time*/
.chronic ul li div time::after{
  content: "\A";
  white-space: pre;
}
